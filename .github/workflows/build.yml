name: Build

on:
  pull_request:
  push:
    branches:
      - master
      - feature/**
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build the Docker image
    runs-on: ubuntu-latest

    env:
      REGISTRY_IMAGE: mryash/guixx
      GUIX_VERSION: 1.4.0
      BUILDKIT_VERSION: 0.13.0

    strategy:
      fail-fast: false
      matrix:
        platform: [
          { docker: linux/amd64, guix: x86_64-linux },
          { docker: linux/386, guix: i686-linux },
        ]

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform.docker }}
          echo "PLATFORM_TAG=${platform//\//-}" >> $GITHUB_ENV
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup BuildX
        uses: docker/setup-buildx-action@v3
        with:
          version: v${{ env.BUILDKIT_VERSION }}

      - name: Verify Docker BuildX Version
        run: docker buildx version

      - name: Create a new builder instance
        run: docker buildx create --use --name insecure-builder --buildkitd-flags '--allow-insecure-entitlement security.insecure'

      - name: Authenticate to Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.docker }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY_IMAGE }}:${{ env.PLATFORM_TAG }}
          allow: security.insecure
          build-args: |
            METACALL_GUIX_VERSION=${{ env.GUIX_VERSION }}
            METACALL_GUIX_ARCH=${{ matrix.platform.guix }}

  merge:
    name: Merge manifests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v${{ env.BUILDKIT_VERSION }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Authenticate to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            --annotation "org.opencontainers.image.authors=dvdksn" \
            --tag ${{ env.REGISTRY_IMAGE }}:latest \
            ${{ env.REGISTRY_IMAGE }}:linux-amd64 \
            ${{ env.REGISTRY_IMAGE }}:linux-386
